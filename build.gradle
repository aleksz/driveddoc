buildscript {
    repositories {
        mavenCentral()
    }
    
    dependencies {
        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.0'
        classpath 'com.eriwen:gradle-js-plugin:1.9.0'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'appengine'
apply plugin: 'eclipse'
apply plugin: 'js'

project.webAppDirName = 'war'

eclipse {
	project {
		natures 'com.google.appengine.eclipse.core.gaeNature'
	}
	
	classpath {
    	containers 'com.google.appengine.eclipse.core.GAE_CONTAINER'
		defaultOutputDir = file("war/WEB-INF/classes")
	}
}

task eclipseLibs(type: Sync) {
    from configurations.runtime
    into "war/WEB-INF/lib"
}

tasks.eclipse.dependsOn eclipseLibs

appengine {
    httpPort = 8888
    downloadSdk = true
}

repositories {
	mavenCentral()
	maven {
        url "http://google-api-client-libraries.appspot.com/mavenrepo"
	}
}

dependencies { 

	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-all:1.9.5'

	appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.0'
    compile 'com.google.appengine:appengine-api-1.0-sdk:1.8.8'
    compile 'com.google.api-client:google-api-client-gson:1.17.0-rc'
	compile 'com.google.oauth-client:google-oauth-client-appengine:1.17.0-rc'
	compile 'com.google.apis:google-api-services-drive:v2-rev110-1.17.0-rc'
	compile 'com.google.apis:google-api-services-oauth2:v2-rev59-1.17.0-rc'
	compile 'com.google.apis:google-api-services-datastore:v1beta2-rev6-1.17.0-rc'
	compile 'com.google.code.gson:gson:2.2.4'
	compile 'com.google.inject:guice:4.0-beta'
	compile 'com.google.inject.extensions:guice-servlet:4.0-beta'
	compile 'log4j:log4j:1.2.17'

	//jdigidoc	
    compile fileTree(dir: 'local-lib', includes: ['*.jar']) 
	compile 'org.apache.commons:commons-compress:1.6'
	compile 'commons-codec:commons-codec:1.9'
	compile 'org.bouncycastle:bcprov-jdk15on:1.50'
}

task startFakeSSL {
	doLast {
		'stunnel4 stunnel/dev_https'.execute()
	}
}

appengineRun.dependsOn startFakeSSL

javascript.source {
    dev {
        js {
        	srcDir "war/resources/public/js"
        }
    }
    prod {
        js {
            srcDir jsSrcDir
            include "*.min.js"
        }
    }
}

combineJs {
    source = javascript.source.dev.js.files
    dest = file("${buildDir}/all.js")
}

requireJs {
    source = javascript.source.dev.js.files
    //dest = file("${buildDir}/out.js")
	requirejs.buildprofile = new File("war/resources/public/build.js")
}

task jasmine(type: Exec) {
	commandLine 'phantomjs war/resources/test/run-jasmine.js war/resources/test/SpecRunner.html'.tokenize()
}

test.dependsOn jasmine

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}
